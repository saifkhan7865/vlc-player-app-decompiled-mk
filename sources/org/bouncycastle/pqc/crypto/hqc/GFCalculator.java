package org.bouncycastle.pqc.crypto.hqc;

import androidx.car.app.hardware.common.CarUnit;
import nl.dionsegijn.konfetti.core.Angle;
import org.bouncycastle.asn1.BERTags;
import org.bouncycastle.math.Primes;
import org.videolan.libvlc.MediaPlayer;
import org.videolan.medialibrary.interfaces.media.MediaWrapper;
import org.videolan.vlc.util.Permissions;

class GFCalculator {
    static int[] exp;
    static int[] log = {0, 0, 1, 25, 2, 50, 26, 198, 3, 223, 51, 238, 27, 104, 199, 75, 4, 100, BERTags.FLAGS, 14, 52, 141, 239, 129, 28, 193, 105, 248, 200, 8, 76, 113, 5, 138, 101, 47, 225, 36, 15, 33, 53, 147, 142, 218, 240, 18, 130, 69, 29, 181, 194, 125, 106, 39, 249, 185, 201, 154, 9, 120, 77, 228, 114, 166, 6, 191, 139, 98, 102, 221, 48, Permissions.PERMISSION_WRITE_STORAGE_TAG, 226, MediaWrapper.META_AUDIODELAY, 37, 179, 16, 145, 34, 136, 54, 208, 148, 206, 143, 150, 219, 189, 241, 210, 19, 92, 131, 56, 70, 64, 30, 66, 182, 163, 195, 72, 126, 110, 107, 58, 40, 84, 250, 133, 186, 61, CarUnit.LITER, 94, 155, 159, 10, 21, 121, 43, 78, 212, 229, 172, 115, 243, 167, 87, 7, 112, 192, 247, 140, 128, 99, 13, 103, 74, 222, 237, 49, 197, Permissions.PERMISSION_SETTINGS_TAG, 24, 227, 165, 153, 119, 38, 184, Angle.LEFT, 124, 17, 68, 146, 217, 35, 32, 137, 46, 55, 63, 209, 91, 149, 188, 207, 205, 144, 135, MediaWrapper.META_GAIN, 178, 220, 252, 190, 97, 242, 86, Primes.SMALL_FACTOR_LIMIT, 171, 20, 42, 93, 158, 132, 60, 57, 83, 71, 109, 65, 162, 31, 45, 67, 216, 183, 123, 164, 118, 196, 23, 73, 236, 127, 12, 111, 246, 108, 161, 59, 82, 41, 157, 85, 170, MediaWrapper.META_METADATA_RETRIEVED, 96, 134, 177, 187, CarUnit.IMPERIAL_GALLON, 62, 90, CarUnit.US_GALLON, 89, 95, 176, 156, 169, 160, 81, 11, 245, 22, 235, 122, 117, 44, 215, 79, 174, 213, 233, 230, 231, 173, 232, 116, 214, 244, 234, 168, 80, 88, 175};

    static {
        int[] iArr = new int[MediaPlayer.Event.Opening];
        // fill-array-data instruction
        iArr[0] = 1;
        iArr[1] = 2;
        iArr[2] = 4;
        iArr[3] = 8;
        iArr[4] = 16;
        iArr[5] = 32;
        iArr[6] = 64;
        iArr[7] = 128;
        iArr[8] = 29;
        iArr[9] = 58;
        iArr[10] = 116;
        iArr[11] = 232;
        iArr[12] = 205;
        iArr[13] = 135;
        iArr[14] = 19;
        iArr[15] = 38;
        iArr[16] = 76;
        iArr[17] = 152;
        iArr[18] = 45;
        iArr[19] = 90;
        iArr[20] = 180;
        iArr[21] = 117;
        iArr[22] = 234;
        iArr[23] = 201;
        iArr[24] = 143;
        iArr[25] = 3;
        iArr[26] = 6;
        iArr[27] = 12;
        iArr[28] = 24;
        iArr[29] = 48;
        iArr[30] = 96;
        iArr[31] = 192;
        iArr[32] = 157;
        iArr[33] = 39;
        iArr[34] = 78;
        iArr[35] = 156;
        iArr[36] = 37;
        iArr[37] = 74;
        iArr[38] = 148;
        iArr[39] = 53;
        iArr[40] = 106;
        iArr[41] = 212;
        iArr[42] = 181;
        iArr[43] = 119;
        iArr[44] = 238;
        iArr[45] = 193;
        iArr[46] = 159;
        iArr[47] = 35;
        iArr[48] = 70;
        iArr[49] = 140;
        iArr[50] = 5;
        iArr[51] = 10;
        iArr[52] = 20;
        iArr[53] = 40;
        iArr[54] = 80;
        iArr[55] = 160;
        iArr[56] = 93;
        iArr[57] = 186;
        iArr[58] = 105;
        iArr[59] = 210;
        iArr[60] = 185;
        iArr[61] = 111;
        iArr[62] = 222;
        iArr[63] = 161;
        iArr[64] = 95;
        iArr[65] = 190;
        iArr[66] = 97;
        iArr[67] = 194;
        iArr[68] = 153;
        iArr[69] = 47;
        iArr[70] = 94;
        iArr[71] = 188;
        iArr[72] = 101;
        iArr[73] = 202;
        iArr[74] = 137;
        iArr[75] = 15;
        iArr[76] = 30;
        iArr[77] = 60;
        iArr[78] = 120;
        iArr[79] = 240;
        iArr[80] = 253;
        iArr[81] = 231;
        iArr[82] = 211;
        iArr[83] = 187;
        iArr[84] = 107;
        iArr[85] = 214;
        iArr[86] = 177;
        iArr[87] = 127;
        iArr[88] = 254;
        iArr[89] = 225;
        iArr[90] = 223;
        iArr[91] = 163;
        iArr[92] = 91;
        iArr[93] = 182;
        iArr[94] = 113;
        iArr[95] = 226;
        iArr[96] = 217;
        iArr[97] = 175;
        iArr[98] = 67;
        iArr[99] = 134;
        iArr[100] = 17;
        iArr[101] = 34;
        iArr[102] = 68;
        iArr[103] = 136;
        iArr[104] = 13;
        iArr[105] = 26;
        iArr[106] = 52;
        iArr[107] = 104;
        iArr[108] = 208;
        iArr[109] = 189;
        iArr[110] = 103;
        iArr[111] = 206;
        iArr[112] = 129;
        iArr[113] = 31;
        iArr[114] = 62;
        iArr[115] = 124;
        iArr[116] = 248;
        iArr[117] = 237;
        iArr[118] = 199;
        iArr[119] = 147;
        iArr[120] = 59;
        iArr[121] = 118;
        iArr[122] = 236;
        iArr[123] = 197;
        iArr[124] = 151;
        iArr[125] = 51;
        iArr[126] = 102;
        iArr[127] = 204;
        iArr[128] = 133;
        iArr[129] = 23;
        iArr[130] = 46;
        iArr[131] = 92;
        iArr[132] = 184;
        iArr[133] = 109;
        iArr[134] = 218;
        iArr[135] = 169;
        iArr[136] = 79;
        iArr[137] = 158;
        iArr[138] = 33;
        iArr[139] = 66;
        iArr[140] = 132;
        iArr[141] = 21;
        iArr[142] = 42;
        iArr[143] = 84;
        iArr[144] = 168;
        iArr[145] = 77;
        iArr[146] = 154;
        iArr[147] = 41;
        iArr[148] = 82;
        iArr[149] = 164;
        iArr[150] = 85;
        iArr[151] = 170;
        iArr[152] = 73;
        iArr[153] = 146;
        iArr[154] = 57;
        iArr[155] = 114;
        iArr[156] = 228;
        iArr[157] = 213;
        iArr[158] = 183;
        iArr[159] = 115;
        iArr[160] = 230;
        iArr[161] = 209;
        iArr[162] = 191;
        iArr[163] = 99;
        iArr[164] = 198;
        iArr[165] = 145;
        iArr[166] = 63;
        iArr[167] = 126;
        iArr[168] = 252;
        iArr[169] = 229;
        iArr[170] = 215;
        iArr[171] = 179;
        iArr[172] = 123;
        iArr[173] = 246;
        iArr[174] = 241;
        iArr[175] = 255;
        iArr[176] = 227;
        iArr[177] = 219;
        iArr[178] = 171;
        iArr[179] = 75;
        iArr[180] = 150;
        iArr[181] = 49;
        iArr[182] = 98;
        iArr[183] = 196;
        iArr[184] = 149;
        iArr[185] = 55;
        iArr[186] = 110;
        iArr[187] = 220;
        iArr[188] = 165;
        iArr[189] = 87;
        iArr[190] = 174;
        iArr[191] = 65;
        iArr[192] = 130;
        iArr[193] = 25;
        iArr[194] = 50;
        iArr[195] = 100;
        iArr[196] = 200;
        iArr[197] = 141;
        iArr[198] = 7;
        iArr[199] = 14;
        iArr[200] = 28;
        iArr[201] = 56;
        iArr[202] = 112;
        iArr[203] = 224;
        iArr[204] = 221;
        iArr[205] = 167;
        iArr[206] = 83;
        iArr[207] = 166;
        iArr[208] = 81;
        iArr[209] = 162;
        iArr[210] = 89;
        iArr[211] = 178;
        iArr[212] = 121;
        iArr[213] = 242;
        iArr[214] = 249;
        iArr[215] = 239;
        iArr[216] = 195;
        iArr[217] = 155;
        iArr[218] = 43;
        iArr[219] = 86;
        iArr[220] = 172;
        iArr[221] = 69;
        iArr[222] = 138;
        iArr[223] = 9;
        iArr[224] = 18;
        iArr[225] = 36;
        iArr[226] = 72;
        iArr[227] = 144;
        iArr[228] = 61;
        iArr[229] = 122;
        iArr[230] = 244;
        iArr[231] = 245;
        iArr[232] = 247;
        iArr[233] = 243;
        iArr[234] = 251;
        iArr[235] = 235;
        iArr[236] = 203;
        iArr[237] = 139;
        iArr[238] = 11;
        iArr[239] = 22;
        iArr[240] = 44;
        iArr[241] = 88;
        iArr[242] = 176;
        iArr[243] = 125;
        iArr[244] = 250;
        iArr[245] = 233;
        iArr[246] = 207;
        iArr[247] = 131;
        iArr[248] = 27;
        iArr[249] = 54;
        iArr[250] = 108;
        iArr[251] = 216;
        iArr[252] = 173;
        iArr[253] = 71;
        iArr[254] = 142;
        iArr[255] = 1;
        iArr[256] = 2;
        iArr[257] = 4;
        exp = iArr;
    }

    GFCalculator() {
    }

    static int inverse(int i) {
        return exp[255 - log[i]] & Utils.toUnsigned16Bits((-i) >> 31);
    }

    static int mod(int i) {
        int unsigned16Bits = Utils.toUnsigned16Bits(i - 255);
        return Utils.toUnsigned16Bits(unsigned16Bits + (Utils.toUnsigned8bits(-(unsigned16Bits >> 15)) & 255));
    }

    static int mult(int i, int i2) {
        int unsigned16Bits = Utils.toUnsigned16Bits((-i) >> 31) & Utils.toUnsigned16Bits((-i2) >> 31);
        int[] iArr = exp;
        int[] iArr2 = log;
        return Utils.toUnsigned16Bits(iArr[mod(iArr2[i] + iArr2[i2])] & unsigned16Bits);
    }
}
